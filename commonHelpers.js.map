{"version":3,"file":"commonHelpers.js","sources":["../src/js/alertOptions.js","../src/js/1-timer.js"],"sourcesContent":["export const alertOptions = {\n    error: {\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        color: '#EF4040',\n        position: 'topRight',\n        icon: 'icon-octagon',\n        iconText: '',\n        timeout: 5000,\n        titleColor: '#fff',\n        messageColor: '#fff',\n        iconColor: '#fff',\n    },\n    success: {\n        title: 'OK',\n        message: 'Fulfilled promise in 4000ms',\n        color: '#59A10D',\n        position: 'topRight',\n        icon: 'icon-check-circle',\n        iconText: '',\n        timeout: 5000,\n        titleColor: '#fff',\n        essageColor: '#fff',\n        iconColor: '#fff',\n    },\n};","import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { alertOptions } from './alertOptions.js';\n\nconst dateTimeSelector = document.querySelector('input#datetime-picker');\nconst startTimerButton = document.querySelector('button[data-start]');\nconst daysInput = document.querySelector('span[data-days]');\nconst hoursInput = document.querySelector('span[data-hours]');\nconst minutesInput = document.querySelector('span[data-minutes]');\nconst secondsInput = document.querySelector('span[data-seconds]');\n\nlet userSelectedDate, timerId;\n\nconst countLeftTime = date => {\n    const dateNow = Math.floor(Date.now() / 1000);\n    const selectedDate = date.getTime() / 1000;\n    return (selectedDate - dateNow) * 1000;\n};\n\nconst convertMs = ms => {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n};\n\nconst setDate = ({ days, hours, minutes, seconds }) => {\n    daysInput.textContent = String(days).padStart(2, 0);\n    hoursInput.textContent = String(hours).padStart(2, 0);\n    minutesInput.textContent = String(minutes).padStart(2, 0);\n    secondsInput.textContent = String(seconds).padStart(2, 0);\n};\n\nconst startTimer = time => {\n    return () => {\n        time -= 1000;\n        if (time >= 0) {\n        setDate(convertMs(time));\n        } else {\n        dateTimeSelector.disabled = false;\n        clearInterval(timerId);\n        }\n    };\n};\n\nstartTimerButton.addEventListener('click', () => {\n    const time = countLeftTime(userSelectedDate);\n    startTimerButton.disabled = true;\n\n    if (time > 0) {\n        dateTimeSelector.disabled = true;\n        setDate(convertMs(time));\n        timerId = setInterval(startTimer(time), 1000);\n    } else {\n        iziToast.show(alertOptions.error);\n    }\n});\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        if (countLeftTime(selectedDates[0]) > 0) {\n        userSelectedDate = selectedDates[0];\n        startTimerButton.disabled = false;\n        } else {\n        startTimerButton.disabled = true;\n        iziToast.show(alertOptions.error);\n        }\n    },\n};\n\nflatpickr(dateTimeSelector, options);"],"names":["alertOptions","dateTimeSelector","startTimerButton","daysInput","hoursInput","minutesInput","secondsInput","userSelectedDate","timerId","countLeftTime","date","dateNow","convertMs","ms","days","hours","minutes","seconds","setDate","startTimer","time","iziToast","options","selectedDates","flatpickr"],"mappings":"2FAAO,MAAMA,EAAe,CACxB,MAAO,CACH,MAAO,QACP,QAAS,qCACT,MAAO,UACP,SAAU,WACV,KAAM,eACN,SAAU,GACV,QAAS,IACT,WAAY,OACZ,aAAc,OACd,UAAW,MACd,EACD,QAAS,CACL,MAAO,KACP,QAAS,8BACT,MAAO,UACP,SAAU,WACV,KAAM,oBACN,SAAU,GACV,QAAS,IACT,WAAY,OACZ,YAAa,OACb,UAAW,MACd,CACL,ECnBMC,EAAmB,SAAS,cAAc,uBAAuB,EACjEC,EAAmB,SAAS,cAAc,oBAAoB,EAC9DC,EAAY,SAAS,cAAc,iBAAiB,EACpDC,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAe,SAAS,cAAc,oBAAoB,EAC1DC,EAAe,SAAS,cAAc,oBAAoB,EAEhE,IAAIC,EAAkBC,EAEtB,MAAMC,EAAgBC,GAAQ,CAC1B,MAAMC,EAAU,KAAK,MAAM,KAAK,IAAG,EAAK,GAAI,EAE5C,OADqBD,EAAK,QAAO,EAAK,IACfC,GAAW,GACtC,EAEMC,EAAYC,GAAM,CAMpB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,EAEMC,EAAU,CAAC,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,IAAO,CACnDd,EAAU,YAAc,OAAOW,CAAI,EAAE,SAAS,EAAG,CAAC,EAClDV,EAAW,YAAc,OAAOW,CAAK,EAAE,SAAS,EAAG,CAAC,EACpDV,EAAa,YAAc,OAAOW,CAAO,EAAE,SAAS,EAAG,CAAC,EACxDV,EAAa,YAAc,OAAOW,CAAO,EAAE,SAAS,EAAG,CAAC,CAC5D,EAEME,EAAaC,GACR,IAAM,CACTA,GAAQ,IACJA,GAAQ,EACZF,EAAQN,EAAUQ,CAAI,CAAC,GAEvBnB,EAAiB,SAAW,GAC5B,cAAcO,CAAO,EAE7B,EAGAN,EAAiB,iBAAiB,QAAS,IAAM,CAC7C,MAAMkB,EAAOX,EAAcF,CAAgB,EAC3CL,EAAiB,SAAW,GAExBkB,EAAO,GACPnB,EAAiB,SAAW,GAC5BiB,EAAQN,EAAUQ,CAAI,CAAC,EACvBZ,EAAU,YAAYW,EAAWC,CAAI,EAAG,GAAI,GAE5CC,EAAS,KAAKrB,EAAa,KAAK,CAExC,CAAC,EAED,MAAMsB,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACfd,EAAcc,EAAc,EAAE,EAAI,GACtChB,EAAmBgB,EAAc,GACjCrB,EAAiB,SAAW,KAE5BA,EAAiB,SAAW,GAC5BmB,EAAS,KAAKrB,EAAa,KAAK,EAEnC,CACL,EAEAwB,EAAUvB,EAAkBqB,CAAO"}